1. GitHub webhook triggers, Jenkins will start the job.
2. Maven will build the code and runs JUnit tests.
3. SonarQube scanner will scan the code and sends the report to SonarQube server.
4. Quality gate will evaluate the report against defined conditions.
5. Webhook will notify Jenkins of quality gate status.
6. Artifacts will send to JFrog Artifactory.
7. Docker will build the Docker image.
8. Trivy will scan the Docker image and generates a report.
9. Trivy report will be sent to S3 for future review.
10. Docker image will be pushed to Docker Hub.
11. Jenkins will clone the Kubernetes manifest repo, and pull the changes if already present.
12. Jenkins will update the image tag in the deployment manifest.
13. Jenkins will commit and pushes the changes to the feature branch.
14. Jenkins creates a pull request against the main branch.
15. Slack will notify the user
16. A Senior team member will review and merge the pull request.
17. ArgoCD will pull the changes and deploy the application to Kubernetes.

Tools and services I used ðŸ›  :
1. Eclipse
2. Git
3. Github
4. Jenkins: for CI
5. Maven
6. Junit
7. SonarQube: to check the code quality (bugs, vulnerability, code smells)
8. Jforg Artifactory
9. Docker: to dockerize the application
10. Trivy: to scan docker images for vulnerabilities
11. AWS S3: to store reports generated by trivy
12. DockerHub: to store docker images
13.GitHub CLI: to create a Pull request
14. Hashicorp Vault: to store secret credentials
15. EKS: K8s Cluster to deploy the app
16. ArgoCD: for continuous deployment to K8s
17. Prometheus and Grafana: to monitor cluster, application
18. Slack: for notification

ðŸ“š I wrote everything (Pipeline flow, Installation of each tool, Configuration of each tool, Integration of tools, how to create pipeline and outputs) about this in the GitHub readme.

Github repo(for CI): https://lnkd.in/gwqmjMNr

Github repo(for CD):https://lnkd.in/g5-KTr7W

Portfolio Link: https://sirvipraveen.me/


Share this Project with your DevOps buddy.